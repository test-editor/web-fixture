package org.testeditor.fixture.web.angularjs

interaction type wait {
	template = "Wait" ${seconds} "seconds"
	method = NgOneWebDriverFixture.waitSeconds(seconds)
}

interaction type waitUntilElementFound {
    template = "Wait" ${seconds} "seconds until" ${element} "is found"
    method = NgOneWebDriverFixture.waitUntilElementFound(element, locatorStrategy, seconds)
}

interaction type startBrowser {
	template = "Start " ${element}
	method = NgOneWebDriverFixture.startBrowser(element)
}

interaction type startFireFoxPortable {
	label = "Start browser firefox portable"
	template = "Start firefox portable" ${path}
	method = NgOneWebDriverFixture.startFireFoxPortable(path)
}

interaction type goToUrl {
	template = "Browse" ${url}
	method = NgOneWebDriverFixture.goToUrl(url)
}

interaction type getTitle {
    template = "Get title"
    method = NgOneWebDriverFixture.getTitle()
}

interaction type closeBrowser {
	template = "Close browser"
	method = NgOneWebDriverFixture.closeBrowser
}

interaction type setActiveBrowser {
	template = "Set active browser" ${browser}
	method = NgOneWebDriverFixture.setDriver(browser)
}

interaction type typeIn {
	template = "Enter" ${value} "into" ${element} 
	method = NgOneWebDriverFixture.typeInto(element, locatorStrategy, value)
}

interaction type sendEnter {
	template = "Press enter on" ${element}
	method = NgOneWebDriverFixture.pressEnterOn(element, locatorStrategy)
}

interaction type submit {
    template = "submit element" ${element}
    method = NgOneWebDriverFixture.submit(element, locatorStrategy)
}
interaction type clear {
	template = "Clear" ${element}
	method = NgOneWebDriverFixture.clear(element, locatorStrategy)
}

interaction type click {
	template = "Click" ${element}
	method = NgOneWebDriverFixture.clickOn(element, locatorStrategy)
}

interaction type selectInSelection {
	template = "Select" ${value} "from" ${element}
	method = NgOneWebDriverFixture.selectElementInSelection(element, locatorStrategy, value)
}

interaction type getAvailableOptions {
	template = "Read available" ${element}
	method = NgOneWebDriverFixture.getOptionsInSelection(element, locatorStrategy)
}

interaction type readValue {
	template = "Read" ${element}
	method = NgOneWebDriverFixture.readValue(element, locatorStrategy)
}


interaction type executeScript {
	template = "Execute script" ${value}
	method = NgOneWebDriverFixture.setExecuteScript(value)	
}

interaction type checkEnabled {
	template = "Is" ${element} "enabled"
	method = NgOneWebDriverFixture.checkEnabled(element, locatorStrategy)

}

element type BrowserApplication {
	interactions = startBrowser, startFireFoxPortable, executeScript, getTitle, submit
}

element type field {
	interactions = typeIn, sendEnter, waitUntilElementFound
}

element type button {
	interactions = click, sendEnter, checkEnabled, waitUntilElementFound
}

element type selection {
	interactions = click, sendEnter, selectInSelection, getAvailableOptions, waitUntilElementFound
}

element type dateTimePicker {
	interactions = click, readValue, waitUntilElementFound
}

element type labelElement {
	interactions = readValue, waitUntilElementFound
}

component type GeneralBrowser {
	interactions = wait, waitUntilElementFound, goToUrl, closeBrowser, setActiveBrowser
}

component type Page {
	interactions = wait, waitUntilElementFound, submit, getTitle
}

component WebBrowser is GeneralBrowser {
	element defaultBrowser is BrowserApplication {
		locator ="default"
	}
	element Firefox is BrowserApplication {
		label = "Firefox"
		locator ="firefox"
	}

	element IE is BrowserApplication {
		label = "Internet Explorer"
		locator ="ie"
	}
	element Chrome is BrowserApplication {
		label = "Chrome"
		locator ="chrome"
	}
}
