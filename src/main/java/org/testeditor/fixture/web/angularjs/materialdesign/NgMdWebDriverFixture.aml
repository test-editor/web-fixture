package org.testeditor.fixture.web.angularjs.materialdesign

interaction type wait {
	template = "Wait" ${seconds} "seconds"
	method = NgMdWebDriverFixture.waitSeconds(seconds)
}

interaction type startBrowser {
	template = "Start " ${element} 
	method = NgMdWebDriverFixture.startBrowser(element)
}

interaction type startFireFoxPortable {
	label = "Start browser firefox portable"
	template = "Start firefox portable " ${path} 
	method = NgMdWebDriverFixture.startFireFoxPortable(path)
}

interaction type launchFireFoxPortable {
	label = "Launch browser firefox portable with predefined browser.path in pom.xml"
	template = "Launch firefox portable"
	method = NgMdWebDriverFixture.launchFirefoxPortable()
}

interaction type goToUrl {
	template = "Browse" ${url}
	method = NgMdWebDriverFixture.goToUrl(url)
}

interaction type closeBrowser {
	template = "Close browser"
	method = NgMdWebDriverFixture.closeBrowser
}

interaction type setActiveBrwoser {
	template = "Set active browser" ${browser}
	method = NgMdWebDriverFixture.setDriver(browser)
}

interaction type typeIn {
	template = "Enter" ${element} "into" ${value}
	method = NgMdWebDriverFixture.typeInto(element, value)
}

interaction type sendEnter {
	template = "Press enter on" ${element}
	method = NgMdWebDriverFixture.pressEnterOn(element)
}

interaction type clear {
	template = "Clear" ${element}
	method = NgMdWebDriverFixture.clear(element)
}

interaction type click {
	template = "Click" ${element}
	method = NgMdWebDriverFixture.clickOn(element)	
}

interaction type selectInSelection {
	template = "Select " ${value} "from" ${element}
	method = NgMdWebDriverFixture.selectElementInSelection(element,value)	
}

interaction type getAvailableOptions {
	template = "Read available " ${element}
	method = NgMdWebDriverFixture.getOptionsInSelection(element)	
}

interaction type readValue {
	template = "Read" ${element}
	method = NgMdWebDriverFixture.readValue(element)	
}


interaction type executeScript {
	template = "Execute script" ${value}
	method = NgMdWebDriverFixture.setExecuteScript(value)	
}

interaction type checkEnabled {
	template = "Is " ${element} " enabled"
	method = NgMdWebDriverFixture.checkEnabled(element)	

}

element type BrowserApplication {
	interactions = startBrowser, startFireFoxPortable, launchFireFoxPortable
}

element type field {
	interactions = typeIn, sendEnter
}

element type button {
	interactions = click, sendEnter, checkEnabled
}

element type selection {
	interactions = click, sendEnter, selectInSelection, getAvailableOptions
}

element type dateTimePicker {
	interactions = click, readValue
}

element type labelElement {
	interactions = readValue
}

component type GeneralBrowser {
	interactions = wait, goToUrl, closeBrowser, setActiveBrwoser
}

component type Page {
	interactions = wait
}

component WebBrowser is GeneralBrowser {
	element defaultBrowser is BrowserApplication {
		locator ="default"
	}
	element OlderFirefox is BrowserApplication {
		label = "Firefox(older)"
		locator ="firefox"
	}
	element Firefox is BrowserApplication {
		label = "Firefox(47 and above)"
		locator ="modernfirefox"
	}
	element IE is BrowserApplication {
		label = "Internet Explorer"
		locator ="ie"
	}
	element Chrome is BrowserApplication {
		label = "Chrome"
		locator ="chrome"
	}
}
